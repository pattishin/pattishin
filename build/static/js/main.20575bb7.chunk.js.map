{"version":3,"sources":["assets/patti.jpeg","App.js","serviceWorker.js","index.js"],"names":["module","exports","App","props","state","open","fetch","method","then","res","json","data","setState","author","catch","err","classes","this","fixedHeightPaper","clsx","paper","fixedHeight","className","root","CssBaseline","AppBar","position","appBar","appBarShift","Toolbar","toolbar","IconButton","edge","color","aria-label","onClick","menuButton","menuButtonHidden","Drawer","variant","drawerPaper","drawerPaperClose","toolbarIcon","style","src","avatar","alt","Typography","component","noWrap","title","href","target","rel","content","appBarSpacer","Container","maxWidth","container","Grid","spacing","item","xs","md","lg","Paper","description","Component","withStyles","theme","display","paddingRight","alignItems","justifyContent","padding","backgroundColor","mixins","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","marginLeft","width","drawerWidth","enteringScreen","marginRight","flexGrow","whiteSpace","overflowX","breakpoints","up","height","overflow","paddingTop","paddingBottom","flexDirection","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","console","message"],"mappings":"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","file":"static/js/main.20575bb7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/patti.4a44f4ad.jpeg\";","import React, { Component } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport MicIcon from '@material-ui/icons/Mic';\nimport SlideshowIcon from '@material-ui/icons/Slideshow';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport TwitterIcon from '@material-ui/icons/Twitter';\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\nimport avatar from './assets/patti.jpeg';\nimport './App.css';\n\nconst drawerWidth = 240;\nconst styles = (theme) => ({\n  root: {\n    display: 'flex',\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    backgroundColor: '#404040',\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    backgroundColor: 'black',\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth-1}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: 'none',\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    backgroundColor: '#404040',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: '0px',\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9),\n    },\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 240,\n  }\n});\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { open: true };\n  }\n\n  componentDidMount() {\n    fetch(\n      'http://localhost:8080/api/author',\n      { method: 'GET' }\n    )\n    .then(res => res.json())\n    .then(data => this.setState({ author: data }))\n    .catch(err => err);\n  }\n\n  render() {\n    const { classes } = this.props;\n    const { open, author } = this.state;\n    const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n\n    return (\n      <div className={classes.root}>\n        <CssBaseline />\n        <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\n          <Toolbar className={classes.toolbar}>\n            <IconButton\n              edge=\"end\"\n              color=\"inherit\"\n              aria-label=\"open drawer\"\n              onClick={() => this.setState({ open: true }) }\n              className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\n            >\n              <MenuIcon />\n            </IconButton>\n            <IconButton color=\"inherit\">\n              <SlideshowIcon />\n            </IconButton>\n            <IconButton color=\"inherit\">\n              <MicIcon />\n            </IconButton>\n          </Toolbar>\n        </AppBar>\n        <Drawer\n          variant=\"permanent\"\n          classes={{\n            paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\n          }}\n          open={open}\n        >\n          <div className={classes.toolbarIcon}>\n            <IconButton onClick={() => this.setState({ open: false }) }>\n              <ChevronLeftIcon style={{ color: 'white' }}/>\n            </IconButton>\n          </div>\n          <div className=\"authorCard\">\n            <div className=\"authorCardTop\">\n              <div className=\"authorAvatarWrapper\">\n                <img src={avatar} className=\"avatar\" alt=\"avatar\" />\n              </div>\n            </div>\n            <div className=\"authorCardBody\">\n              <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\n                patti shin\n              </Typography>\n              <div className=\"authorSocialMedia\">\n                <a href=\"https://github.com/pattishin\" target=\"_blank\" rel=\"noopener noreferrer\">\n                  <IconButton>\n                    <GitHubIcon style={{ color: 'white' }} />\n                  </IconButton>\n                </a>\n                <a href=\"https://twitter.com/pattishin\" target=\"_blank\" rel=\"noopener noreferrer\">\n                  <IconButton>\n                    <TwitterIcon style={{ color: 'white' }} />\n                  </IconButton>\n                </a>\n                <a href=\"https://www.linkedin.com/in/pattishin\" target=\"_blank\" rel=\"noopener noreferrer\">\n                  <IconButton>\n                    <LinkedInIcon style={{ color: 'white' }} />\n                  </IconButton>\n                </a>\n              </div>\n            </div>\n          </div>\n        </Drawer>\n        <main className={classes.content}>\n          <div className={classes.appBarSpacer} />\n          <Container maxWidth=\"lg\" className={classes.container}>\n            <Grid container spacing={3}>\n              <Grid item xs={12} md={8} lg={9}>\n                <Paper className={fixedHeightPaper}>\n                  {author && author.description}\n                </Paper>\n              </Grid>\n              <Grid item xs={12} md={4} lg={3}>\n                <Paper className={fixedHeightPaper}>\n                  hello\n                </Paper>\n              </Grid>\n              <Grid item xs={12}>\n                <Paper className={classes.paper}>\n                  hello\n                </Paper>\n              </Grid>\n            </Grid>\n          </Container>\n        </main>\n      </div>\n    );\n  }\n}\n\nApp.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(App);\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}