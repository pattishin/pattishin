{"version":3,"sources":["assets/patti.jpeg","assets/animated.gif","components/sidebar/index.js","components/loading/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Sidebar","this","props","classes","open","setOpen","Drawer","variant","paper","clsx","drawerPaper","drawerPaperClose","className","toolbarIcon","IconButton","onClick","style","color","src","avatar","alt","Typography","component","noWrap","title","href","target","rel","Component","defaultProps","withStyles","theme","toolbar","paddingRight","display","alignItems","justifyContent","padding","backgroundColor","mixins","flexGrow","position","whiteSpace","width","transition","transitions","create","easing","sharp","duration","enteringScreen","overflowX","leavingScreen","breakpoints","up","spacing","Loading","loadingAnimation","App","state","loading","authors","characters","fetch","method","then","res","json","setState","catch","err","data","fixedHeightPaper","fixedHeight","root","CssBaseline","AppBar","appBar","appBarShift","Toolbar","edge","aria-label","menuButton","menuButtonHidden","status","content","appBarSpacer","id","Container","maxWidth","container","Grid","item","xs","md","lg","Paper","map","a","description","c","name","fontFamily","height","zIndex","drawer","marginLeft","drawerWidth","marginRight","overflow","paddingTop","paddingBottom","flexDirection","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","console","message"],"mappings":"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","file":"static/js/main.ad3b3093.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/patti.4a44f4ad.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/animated.d6a9cc9a.gif\";","import React, { Component } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport Drawer from '@material-ui/core/Drawer';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport TwitterIcon from '@material-ui/icons/Twitter';\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\nimport avatar from '../../assets/patti.jpeg';\nimport './Sidebar.css';\n\nconst drawerWidth = 240;\nconst styles = (theme) => ({\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    backgroundColor: 'rgb(10, 25, 47)',\n    ...theme.mixins.toolbar,\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    backgroundColor: 'rgb(10, 25, 47)',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: '0px',\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9),\n    },\n  }\n});\n\nclass Sidebar extends Component {\n  render() {\n    const { classes, open, setOpen } = this.props;\n\n    return (\n      <Drawer\n        variant=\"permanent\"\n        classes={{\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\n        }}\n        open={open}\n      >\n        <div className={classes.toolbarIcon}>\n          <IconButton onClick={() => setOpen(false) }>\n            <ChevronLeftIcon style={{ color: 'rgb(100, 255, 218)' }} />\n          </IconButton>\n        </div>\n        <div className=\"authorCard\">\n          <div className=\"authorCardTop\">\n            <div className=\"authorAvatarWrapper\">\n              <img src={avatar} className=\"avatar\" alt=\"avatar\" />\n            </div>\n          </div>\n          <div className=\"authorCardBody\">\n            <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\n              patti shin\n            </Typography>\n            <div className=\"authorSocialMedia\">\n              <a href=\"https://github.com/pattishin\" target=\"_blank\" rel=\"noopener noreferrer\">\n                <IconButton>\n                  <GitHubIcon style={{ color: 'rgb(100, 255, 218)' }} />\n                </IconButton>\n              </a>\n              <a href=\"https://twitter.com/pattishin\" target=\"_blank\" rel=\"noopener noreferrer\">\n                <IconButton>\n                  <TwitterIcon style={{ color: 'rgb(100, 255, 218)' }} />\n                </IconButton>\n              </a>\n              <a href=\"https://www.linkedin.com/in/pattishin\" target=\"_blank\" rel=\"noopener noreferrer\">\n                <IconButton>\n                  <LinkedInIcon style={{ color: 'rgb(100, 255, 218)' }} />\n                </IconButton>\n              </a>\n            </div>\n          </div>\n        </div>\n      </Drawer>\n    );\n  }\n}\n\nSidebar.defaultProps = {\n  open: true,\n  setOpen: () => {}\n}\n\nSidebar.propTypes = {\n  open: PropTypes.bool,\n  setOpen: PropTypes.func,\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Sidebar);\n\n\n","import React, { Component } from 'react';\nimport loadingAnimation from '../../assets/animated.gif';\nimport './Loading.css';\n\nclass Loading extends Component {\n  render() {\n    return (\n      <div className=\"loadingContainer\">\n        <img src={loadingAnimation} className=\"logoAnimation\" alt=\"logo\"/>  \n        <p>Loading ...</p>\n      </div>\n    );\n  }\n}\n\nexport default Loading;\n\n\n","import React, { Component } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport MicIcon from '@material-ui/icons/Mic';\nimport SlideshowIcon from '@material-ui/icons/Slideshow';\nimport Sidebar from './components/sidebar';\nimport Loading from './components/loading';\nimport './App.css';\n\nconst drawerWidth = 240;\nconst styles = (theme) => ({\n  root: {\n    display: 'flex',\n    fontFamily: \"Roboto Mono\",\n    height: \"inherit\"\n  },\n  toolbar: {\n    paddingRight: 0,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    backgroundColor: 'rgb(10, 25, 47)',\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth-1}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: 'none',\n  },\n  title: {\n    fontFamily: \"Roboto Mono\"\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto',\n    backgroundColor: '#e0e0e0'\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 240,\n  }\n});\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: true,\n      loading: true,\n      authors: [],\n      characters: []\n    };\n  }\n\n  componentDidMount() {\n    fetch(\n      'http://localhost:8080/api/author',\n      { method: 'GET' }\n    )\n    .then(res => res.json())\n    .then(authors => {\n      this.setState({\n        authors,\n        loading: false\n      });\n    })\n    .catch(err => err);\n    \n    fetch(\n      'http://localhost:8080/api/characters',\n      { method: 'GET' }\n    )\n    .then(res => res.json())\n    .then(data => this.setState({ characters: data }))\n    .catch(err => err);\n  }\n\n  render() {\n    const { classes } = this.props;\n    const { open, characters, loading, authors } = this.state;\n    const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n\n\n    return (\n      <div className={classes.root}>\n      {loading ? <Loading /> : (\n        <>\n          <CssBaseline />\n          <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\n            <Toolbar className={classes.toolbar}>\n              <IconButton\n                edge=\"end\"\n                color=\"inherit\"\n                aria-label=\"open drawer\"\n                onClick={() => this.setState({ open: true }) }\n                className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\n              >\n                <MenuIcon style={{ color: 'rgb(100, 255, 218)' }} />\n              </IconButton>\n              <a href=\"#talks_section\">\n                <IconButton color=\"inherit\">\n                  <SlideshowIcon style={{ color: 'rgb(100, 255, 218)' }} />\n                </IconButton>\n              </a>\n              <a href=\"#podcast_section\">\n                <IconButton color=\"inherit\">\n                  <MicIcon style={{ color: 'rgb(100, 255, 218)' }} />\n                </IconButton>\n              </a>\n            </Toolbar>\n          </AppBar>\n          <Sidebar open={open} setOpen={status => this.setState({ open: status })} />\n          <main className={classes.content}>\n            <div className={classes.appBarSpacer} />\n            <section id=\"about_section\">\n              <Container maxWidth=\"lg\" className={classes.container}>\n                <h3>About</h3>\n                <Grid container spacing={3}>\n                  <Grid item xs={12} md={4} lg={3}>\n                    <Paper className={fixedHeightPaper}>\n                        {authors.map(a => a.description)}\n                    </Paper>\n                  </Grid>\n                  <Grid item xs={12} md={8} lg={9}>\n                    <Paper className={fixedHeightPaper}>\n                      {characters.map(c => c.name)}\n                    </Paper>\n                  </Grid>\n                  <Grid item xs={12}>\n                    <Paper className={classes.paper}>\n                      hello\n                    </Paper>\n                  </Grid>\n                </Grid>\n              </Container>\n            </section>\n            <div className={classes.appBarSpacer} />\n            <section id=\"talks_section\">\n              <Container maxWidth=\"lg\" className={classes.container}>\n                <h3>Talks</h3>\n                <Grid container spacing={3}>\n                  <Grid item xs={12}>\n                    <Paper className={classes.paper}>\n                      Talks\n                    </Paper>\n                  </Grid>\n                </Grid>\n              </Container>\n            </section>\n            <div className={classes.appBarSpacer} />\n            <section id=\"podcast_section\">\n              <Container maxWidth=\"lg\" className={classes.container}>\n                <h3>Podcast</h3>\n                <Grid container spacing={3}>\n                  <Grid item xs={12}>\n                    <Paper className={classes.paper}>\n                      Podcast\n                    </Paper>\n                  </Grid>\n                </Grid>\n              </Container>\n            </section>\n          </main>\n        </>\n      )}\n      </div>\n    );\n  }\n}\n\nApp.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(App);\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}